-- PARADM DB TABLE COMPANY,USER BEGIN
CREATE TABLE PARADM_COMPANY (
  ID INT IDENTITY(10000,1) NOT NULL,
  COMPANY_NAME NVARCHAR(100) NOT NULL,
  COMPANY_NAME_ENG NVARCHAR(100) NULL,
  CODE NVARCHAR(150) NULL,
  OWNER_ID INT NOT NULL,
  ADDRESS1 NVARCHAR(150) NULL,
  ADDRESS2 NVARCHAR(150) NULL,
  ADDRESS3 NVARCHAR(150) NULL,
  CITY NVARCHAR(150) NULL,
  STATE NVARCHAR(150) NULL,
  POSTAL_CODE NVARCHAR(50) NULL,
  AREA_CODE NVARCHAR(50) NULL,
  PHONE_NO NVARCHAR(50) NULL,
  FAX_NO NVARCHAR(50) NULL,
  URL NVARCHAR(50) NULL,
  EMAIL NVARCHAR(200) NOT NULL,
  COUNTRY_ID INT NULL,
  PROVINCE_ID INT NULL,
  LEAD_SOURCE_ID INT NULL,
  INDUSTRY_ID INT NULL,
  TURNOVER FLOAT NULL,
  EMPLOYEE_COUNT INT NULL,
  STOCK_CODE NVARCHAR(20) NULL,
  BUSINESS_ACTIVITY NVARCHAR(500),
  BACKGROUND NVARCHAR(500),
  USER_DEF_1 NVARCHAR(150) NULL,
  USER_DEF_2 NVARCHAR(150) NULL,
  USER_DEF_3 NVARCHAR(150) NULL,
  USER_DEF_4 NVARCHAR(150) NULL,
  USER_DEF_5 NVARCHAR(150) NULL,
  SPECIAL_ALERT_ID INT NULL,
  CLASS_TYPE VARCHAR(2) NULL,
  CIC_ID INT NULL,
  SIC_ID INT NULL,
  STATUS_ID INT NULL,
  OVERSEAS_BRANCHES INT NULL,
  HK_BRANCHES INT NULL, 
  
  DS_DB_NAME                NVARCHAR(50) NOT NULL,
  DS_DB_TYPE                INT NULL,
  DS_DRIVER_CLASS           NVARCHAR(150) NULL,
  DS_URL                    NVARCHAR(150) NULL,
  DS_USERNAME               NVARCHAR(30) NULL,
  DS_PWD                    NVARCHAR(30) NULL,
  DS_JNDI_NAME              NVARCHAR(150) NULL,
  DS_AUTO_COMMIT            NVARCHAR(10) NULL,
  DS_READ_ONLY              NVARCHAR(10) NULL,
  DS_MAX_ACTIVE							INT	NULL,
  DS_MAX_IDLE               INT	NULL,
  DS_MAX_WAIT               INT	NULL,
  DS_POOL_PS                NVARCHAR(10) NULL,
  DS_MAX_OPEN_PS            INT	NULL,
  DS_TRANSACTION_ISOLATION  INT	NULL,
  DS_LOG_ABANDONED          NVARCHAR(10) NULL,
  DS_REMOVE_ABANDONED       NVARCHAR(10) NULL,
  DS_WHILE_IDLE             NVARCHAR(10) NULL,
  
  ACTIVE_FLAG INT NULL,
  EXPIRE_DATE DATETIME NULL,
  REMIND_DATE DATETIME NULL,
  COMPLETE_INIT INT NULL,
  CONFIGURING_PERCENT INT NOT NULL DEFAULT 0,
  
  LICENSED_USER INT NOT NULL,
  STORAGE_SPACE INT NULL, --use paradm company default 500GB
  IS_CLOUD INT NOT NULL, --0 is use other company storage space ,1 is use cloud storage space
  STORAGE_TYPE INT NOT NULL,
  
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  
  PRIMARY KEY  (ID),
  UNIQUE (EMAIL)
);


CREATE TABLE SHORT_URL (
  ID INT IDENTITY(10000,1) NOT NULL,
  SHORT_CODE NVARCHAR(255) NOT NULL,
  LONG_URL NVARCHAR(255) NOT NULL,
  COMPANY_ID  INT NOT NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE PARADM_COMPANY_DATABASE_CONFIG (
	ID INT IDENTITY(10000,1) 	NOT NULL,
	DS_DB_TYPE                INT NULL,
	DS_DRIVER_CLASS           NVARCHAR(150) NULL,
	DS_URL                    NVARCHAR(150) NULL,
	DS_USERNAME               NVARCHAR(30) NULL,
	DS_PWD                    NVARCHAR(30) NULL,
	DS_JNDI_NAME              NVARCHAR(150) NULL,
	DS_AUTO_COMMIT            NVARCHAR(10) NULL,
	DS_READ_ONLY              NVARCHAR(10) NULL,
	DS_MAX_ACTIVE							INT	NULL,
	DS_MAX_IDLE               INT	NULL,
	DS_MAX_WAIT               INT	NULL,
	DS_POOL_PS                NVARCHAR(10) NULL,
	DS_MAX_OPEN_PS            INT	NULL,
	DS_TRANSACTION_ISOLATION  INT	NULL,
	DS_LOG_ABANDONED          NVARCHAR(10) NULL,
	DS_REMOVE_ABANDONED       NVARCHAR(10) NULL,
	DS_WHILE_IDLE             NVARCHAR(10) NULL,
	
	DB_FILE_DIRECTORY					NVARCHAR(1000) NULL,
	DB_FILE_DEFAULT_SIZE			NVARCHAR(255) NULL,
	DB_FILE_MAX_SIZE					NVARCHAR(255) NULL,
	DB_FILE_GROWTH						NVARCHAR(255) NULL,
	DB_COLLATION							NVARCHAR(255) NULL,
		
	LOG_FILE_DIRECTORY				NVARCHAR(1000) NULL,
	LOG_FILE_DEFAULT_SIZE			NVARCHAR(255) NULL,
	LOG_FILE_MAX_SIZE					NVARCHAR(255) NULL,
	LOG_FILE_GROWTH						NVARCHAR(255) NULL,
	
	DB_SEQ				INT NOT NULL,
	DB_COUNT		INT NOT NULL,
	MAX_DB_COUNT			INT NOT NULL,
		
	PRIMARY KEY  (ID)
);

CREATE TABLE PARADM_MTM_DATABASE_CONFIG_COMPANY (
  ID INT IDENTITY(10000,1) NOT NULL, 
  DATABASE_CONFIG_ID INT NOT NULL,
  PARADM_COMPANY_ID INT NOT NULL,
  PRIMARY KEY  (ID)
);


CREATE TABLE INIT_STEP_GROUP (
  ID INT IDENTITY(10000,1) NOT NULL,
  GROUP_NAME NVARCHAR(255) NOT NULL,
  SEQ INT NOT NULL,
  RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,  
  UNIQUE(SEQ),
  PRIMARY KEY  (ID)
);

CREATE TABLE INIT_STEP (
  ID INT IDENTITY(10000,1) NOT NULL,
  GROUP_ID INT NOT NULL,
  STEP_NAME NVARCHAR(255) NOT NULL,
  SEQ INT NOT NULL,
  URL NVARCHAR(1000) NOT NULL,
  RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,  
  UNIQUE(GROUP_ID, ID),
  UNIQUE(GROUP_ID, SEQ),
  PRIMARY KEY  (ID)
);

CREATE TABLE INIT_SETUP_DOC_GROUP (
  ID INT IDENTITY(10000,1) NOT NULL,
  GROUP_NAME NVARCHAR(255) NOT NULL,
  RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,  
  PRIMARY KEY  (ID)
);

CREATE TABLE INIT_SETUP_DOC_TEMPLATE (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_GROUP_ID INT NOT NULL,
  DOC_NAME NVARCHAR(255) NOT NULL,
  DOC_TYPE INT NOT NULL, -- 0: FOLD, 1: DOCUMENT
  PARENT_ID INT NOT NULL,
  ROOT_DOC_ID INT NOT NULL,
  RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,  
  UNIQUE(DOC_GROUP_ID, PARENT_ID, DOC_NAME),
  PRIMARY KEY  (ID)
);

CREATE TABLE MTM_FX_CONNECTOR_COMPANY (
  ID INT IDENTITY(10000,1) NOT NULL,
  COMPANY_ID INT NOT NULL,
  SN_NO NVARCHAR(20) NOT NULL,   
  PRIMARY KEY  (ID)
);

CREATE TABLE PARADM_COMPANY_EMAIL_ADDRESS (
  ID INT IDENTITY(10000,1) NOT NULL,
  EMAIL_ADDRESS NVARCHAR(255) NOT NULL,
  RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,  
  UNIQUE(EMAIL_ADDRESS),
  PRIMARY KEY  (ID)
);

CREATE TABLE SYS_LOGIN_AUDIT_TRAIL (
	ID INT IDENTITY(10000,1) NOT NULL ,
	COMPANY_ID INT NOT NULL,
  USER_RECORD_ID INT NOT NULL,
  LOGIN_NAME NVARCHAR(200) NOT NULL,
  LOGIN_METHOD NVARCHAR(10) NULL,
  LOGIN_DATETIME DATETIME NULL,
  IP_ADDRESS NVARCHAR(255) NULL,
  OS_VERSION NVARCHAR(255) NULL,
  BROWSER_VERSION NVARCHAR(255) NULL,
  SCREEN_RESOLUTION NVARCHAR(255) NULL,
  BROWSER_WINDOW_SIZE NVARCHAR(255) NULL,
  SESSION_ID NVARCHAR(255) NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX SLAT_LOGIN_NAME ON  SYS_LOGIN_AUDIT_TRAIL (LOGIN_NAME);

CREATE TABLE USER_PASSWORD_HISTORY (
  ID INT IDENTITY(10000,1) NOT NULL, 
  USER_RECORD_ID INT NOT NULL,
  LOGIN_PWD VARCHAR(255) NOT NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
) ;
CREATE NONCLUSTERED INDEX UPH_USER_ID ON  USER_PASSWORD_HISTORY (USER_RECORD_ID); 

-- PARADM DB TABLE COMPANY,USER END

-- DOCUMENT STRUCT BEGIN
CREATE TABLE SMARTSHARE_ROOT (
  ID INT IDENTITY(10000,1) NOT NULL,
  ROOT_NAME NVARCHAR(255) NOT NULL,
  ROOT_TYPE INT NOT NULL,   --0:PERSONAL , 1: PUBLIC
  LOC_ID INT,
  STORAGE_LIMIT FLOAT NULL,
  TOTAL_SIZE DECIMAL(38,0) DEFAULT 0,
  OWNER_ID INT NOT NULL,
  RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,  
  PRIMARY KEY  (ID)
);

CREATE NONCLUSTERED INDEX SR_ROOT_NAME ON  SMARTSHARE_ROOT  (ROOT_NAME);

CREATE TABLE SMARTSHARE_DOCUMENT (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_NAME NVARCHAR(255) NOT NULL,
  DOC_TYPE INT NOT NULL, -- 0: FOLD, 1: DOCUMENT
  PARENT_ID INT NOT NULL,
  ROOT_ID INT NOT NULL,  
  DOC_PEM_ID  INT NOT NULL,  
  DOC_STRUCT_ID INT NOT NULL,
  CUR_VERSION_ID INT NOT NULL, 
  VERSION_COUNT  INT NOT NULL,
  CUR_CONTENT_ID INT NOT NULL,
  CHECKOUT_USER_ID INT NULL,
  INHERIT_FLAG  INT NOT NULL, --0:INHERIT , 1: NO INHERIT
  EFFECTIVE_START_DATE DATETIME  NULL,
  EFFECTIVE_END_DATE DATETIME NULL,
  REFE_NO NVARCHAR(100) NULL,
  DESCRIPTION NVARCHAR(2000) NULL,
  ITEM_SIZE DECIMAL(38,0) NULL,
  ITEM_STATUS INT, -- 0: ACTIVE, 1: LOCK
  CREATE_TYPE INT,
  TEAM_ALERT_STATUS INT,
  
  PROFILE_ID INT NULL,
  INDEX_1  NVARCHAR(255) NULL,
  INDEX_2  NVARCHAR(255) NULL,
  INDEX_3  NVARCHAR(255) NULL,
  INDEX_4  NVARCHAR(255) NULL,
  INDEX_5  NVARCHAR(255) NULL,
  INDEX_6  NVARCHAR(255) NULL,
  INDEX_7  NVARCHAR(255) NULL,
  INDEX_8  NVARCHAR(255) NULL,
  INDEX_9  NVARCHAR(255) NULL,
  INDEX_10 NVARCHAR(255) NULL,
  
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX IDX_SD_DOCUMENT_NAME ON  SMARTSHARE_DOCUMENT  (DOC_NAME);
CREATE NONCLUSTERED INDEX IDX_SD_PARENT_ID ON      SMARTSHARE_DOCUMENT  (PARENT_ID);
CREATE NONCLUSTERED INDEX IDX_SD_ROOT_ID ON        SMARTSHARE_DOCUMENT  (ROOT_ID);
CREATE NONCLUSTERED INDEX IDX_SD_DOC_PEM_ID ON     SMARTSHARE_DOCUMENT  (DOC_PEM_ID);
CREATE NONCLUSTERED INDEX IDX_SD_DOC_STRUCT_ID  ON SMARTSHARE_DOCUMENT  (DOC_STRUCT_ID);
CREATE NONCLUSTERED INDEX IDX_SD_CUR_VERSION_ID ON SMARTSHARE_DOCUMENT  (CUR_VERSION_ID);
CREATE NONCLUSTERED INDEX IDX_SD_CUR_CONTENT_ID ON SMARTSHARE_DOCUMENT  (CUR_CONTENT_ID);
CREATE NONCLUSTERED INDEX IDX_SD_RECORD_STATUS ON  SMARTSHARE_DOCUMENT  (RECORD_STATUS);
CREATE NONCLUSTERED INDEX IDX_SD_DOCUMENT_TYPE ON  SMARTSHARE_DOCUMENT  (DOC_TYPE);
CREATE NONCLUSTERED INDEX IDX_SD_CREATE_DATE ON    SMARTSHARE_DOCUMENT  (CREATE_DATE);
CREATE NONCLUSTERED INDEX IDX_SD_UPDATE_DATE ON    SMARTSHARE_DOCUMENT  (UPDATE_DATE);
CREATE NONCLUSTERED INDEX IDX_SD_EFFECTIVE_DATE ON SMARTSHARE_DOCUMENT (EFFECTIVE_END_DATE,EFFECTIVE_START_DATE);
CREATE NONCLUSTERED INDEX IDX_SD_EFFECTIVE_END_DATE ON SMARTSHARE_DOCUMENT (EFFECTIVE_END_DATE);
CREATE NONCLUSTERED INDEX IDX_SD_EFFECTIVE_START_DATE ON SMARTSHARE_DOCUMENT (EFFECTIVE_START_DATE);
CREATE NONCLUSTERED INDEX IDX_SD_ITEM_STATUS ON SMARTSHARE_DOCUMENT (ITEM_STATUS);
CREATE NONCLUSTERED INDEX IDX_SD_PROFILE_ID ON  SMARTSHARE_DOCUMENT  (PROFILE_ID);
CREATE NONCLUSTERED INDEX IDX_SD_INDEX_1 ON  SMARTSHARE_DOCUMENT  (INDEX_1);
CREATE NONCLUSTERED INDEX IDX_SD_INDEX_2 ON  SMARTSHARE_DOCUMENT  (INDEX_2);
CREATE NONCLUSTERED INDEX IDX_SD_INDEX_3 ON  SMARTSHARE_DOCUMENT  (INDEX_3);
CREATE NONCLUSTERED INDEX IDX_SD_INDEX_4 ON  SMARTSHARE_DOCUMENT  (INDEX_4);
CREATE NONCLUSTERED INDEX IDX_SD_INDEX_5 ON  SMARTSHARE_DOCUMENT  (INDEX_5);
CREATE NONCLUSTERED INDEX IDX_SD_INDEX_6 ON  SMARTSHARE_DOCUMENT  (INDEX_6);
CREATE NONCLUSTERED INDEX IDX_SD_INDEX_7 ON  SMARTSHARE_DOCUMENT  (INDEX_7);
CREATE NONCLUSTERED INDEX IDX_SD_INDEX_8 ON  SMARTSHARE_DOCUMENT  (INDEX_8);
CREATE NONCLUSTERED INDEX IDX_SD_INDEX_9 ON  SMARTSHARE_DOCUMENT  (INDEX_9);
CREATE NONCLUSTERED INDEX IDX_SD_INDEX_10 ON  SMARTSHARE_DOCUMENT (INDEX_10);
CREATE NONCLUSTERED INDEX IDX_SD_D_P_R_R ON SMARTSHARE_DOCUMENT(DOC_NAME, PARENT_ID, ROOT_ID, RECORD_STATUS);

CREATE TABLE SMARTSHARE_DOC_VERSION (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_ID INT NOT NULL,
  VERSION_NO NVARCHAR(200) NOT NULL,
  VERSION_LABEL NVARCHAR(90) NULL,
  PARENT_ID INT NOT NULL,
  CONTENT_ID INT NULL,   
  ITEM_STATUS INT NOT NULL,-- 0: ACTIVE, 1: LOCK
  BK_ARCHIVE_ID INT NULL,
  RESTORE_STATUS INT NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX IDX_SDV_DOC_ID        ON  SMARTSHARE_DOC_VERSION  (DOC_ID);
CREATE NONCLUSTERED INDEX IDX_SDV_PARENT_ID    ON  SMARTSHARE_DOC_VERSION  (PARENT_ID);
CREATE NONCLUSTERED INDEX IDX_SDV_CONTENT_ID   ON  SMARTSHARE_DOC_VERSION  (CONTENT_ID);

CREATE TABLE SMARTSHARE_LOC_MASTER (
  ID INT IDENTITY(10000,1) NOT NULL,
  LOC_NAME NVARCHAR(90) NULL,
  LOC_PATH NVARCHAR(100) NOT NULL,  
  SEGMENT_NO INT,
  DESCRIPTION NVARCHAR(255) NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE SMARTSHARE_DOC_CONTENT (
  ID INT IDENTITY(10000,1) NOT NULL,
  CONVERTED_ID NVARCHAR(255) NULL,
  CONVERTED_NAME NVARCHAR(255) NULL,  
  EXT NVARCHAR(15) NULL,
  ITEM_SIZE DECIMAL(38,0) NULL,
  ENCRYPT_SIZE DECIMAL(38,0) NULL,
  SEGMENT_NO INT NULL,
  MD5 NVARCHAR(255) NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

-- DOCUMENT PERMISSION AND HIERARCHY BEGIN
CREATE TABLE SMARTSHARE_DOC_HIERARCHY (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_PEM_ID  INT NOT NULL,  
  DOC_PEM_HIERAY_ID INT NOT NULL,  
  DOC_PEM_LEVEL   INT NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX IDX_SDH_DOC_PEM_ID         ON  SMARTSHARE_DOC_HIERARCHY (DOC_PEM_ID); 
CREATE              INDEX IDX_SDH_DOC_PEM_HIERAY_ID  ON  SMARTSHARE_DOC_HIERARCHY (DOC_PEM_HIERAY_ID); 
CREATE NONCLUSTERED INDEX IDX_SDH_DOC_PEM_LEVEL      ON  SMARTSHARE_DOC_HIERARCHY (DOC_PEM_LEVEL); 

CREATE TABLE SMARTSHARE_DOC_STRUCT  (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_STRUCT_ID  INT NOT NULL,  
  DOC_STRUCT_HIERAY_ID INT NOT NULL,  
  DOC_STRUCT_LEVEL   INT NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX IDX_SDS_DOC_STRUCT_ID          ON  SMARTSHARE_DOC_STRUCT (DOC_STRUCT_ID); 
CREATE              INDEX IDX_SDS_DOC_STRUCT_HIERAY_ID   ON  SMARTSHARE_DOC_STRUCT (DOC_STRUCT_HIERAY_ID); 
CREATE NONCLUSTERED INDEX IDX_SDS_DOC_STRUCT_LEVEL       ON  SMARTSHARE_DOC_STRUCT (DOC_STRUCT_LEVEL); 

CREATE TABLE SMARTSHARE_DOC_RULES_PERMISSION(
  ID INT IDENTITY(10000,1) NOT NULL,
  RULES_ID             INT NOT NULL, 
  DOC_PEM_ID           INT NOT NULL,
  PERMISSION_TYPE      INT NOT NULL,
  READ_PERMISSION      INT NOT NULL, -- 0: READ, 1:DENY READ
  PERMISSION           NVARCHAR(200) NULL, -- OPERATION PERMISSION
  CUSTOM_PERMISSION    NVARCHAR(200) NULL,
  PRIMARY KEY  (ID)
);
CREATE  NONCLUSTERED INDEX  IDX_SDRP_RULES_ID    ON  SMARTSHARE_DOC_RULES_PERMISSION(RULES_ID);
CREATE               INDEX  IDX_SDRP_DOC_PEM_ID  ON  SMARTSHARE_DOC_RULES_PERMISSION (DOC_PEM_ID); 

-- DOCUMENT PERMISSION AND HIERARCHY END

-- DOCUMENT TAG BEGIN 
CREATE TABLE SMARTSHARE_DOC_TAG(
  ID INT IDENTITY(10000,1)  NOT NULL,
  DOC_ID  INT  NOT NULL,
  TAG_ID  INT  NOT NULL,
  USER_ID INT  NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE              INDEX IDX_DT_DOC_ID ON  SMARTSHARE_DOC_TAG (DOC_ID); 
CREATE NONCLUSTERED INDEX  IDX_DT_TAG_ID ON SMARTSHARE_DOC_TAG (TAG_ID); 
CREATE NONCLUSTERED INDEX  IDX_DT_USER_ID ON SMARTSHARE_DOC_TAG (USER_ID); 

CREATE TABLE SMARTSHARE_TAG(
  ID INT IDENTITY(10000,1) NOT NULL,
  TAG_NAME  NVARCHAR(255) NOT NULL,  
  DESCRIPTION  NVARCHAR(255) NULL,
  TAG_OWNER_ID  INT  NOT NULL ,   
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
-- DOCUMENT TAG END 

-- DOCUMENT PROFILE INDEX BEGIN  
CREATE TABLE SMARTSHARE_DOC_PROFILE (
  ID INT IDENTITY(10000,1) NOT NULL,
  PARENT_ID INT NULL,
  OBJECT_TYPE  NVARCHAR(30) NOT NULL,
  PROFILE_NAME NVARCHAR(255) NOT NULL,
  DESCRIPTION  NVARCHAR(255) NULL,
  DOC_PARENT_ID INT NULL,
  DOC_ROOT_ID INT NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE SMARTSHARE_DOC_PROFILE_INDEX (
  ID INT IDENTITY(10000,1) NOT NULL,
  PROFILE_ID INT NOT NULL,
  INDEX_NAME NVARCHAR(255) NULL,
  MANDATORY_FLAG INT NULL,-- 0: MANDATORY, 1: NOT MANDATORY
  VALUE_SUGGEST INT,
  FIELD_TYPE NVARCHAR(10) NULL,
  DISPLAY_SEQ INT NOT NULL,
  REFERENCE NVARCHAR(500) NULL,
  SQL_STAT NVARCHAR(500) NULL,
  CONSTANT INT NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE SMARTSHARE_DOC_PROFILE_INDEX_SELECT (
  ID INT IDENTITY(10000,1) NOT NULL,
  PROFILE_INDEX_ID INT NOT NULL,
  SELECT_VALUE NVARCHAR(255) NOT NULL,
  DEFAULT_FLAG INT NOT NULL,-- 0: DEFAULT, 1: NOT DEFAULT
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE SMARTSHARE_DOC_INDEX_DETAIL (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_ID  INT NOT NULL,
  PROFILE_TYPE INT NOT NULL,
  OBJECT_ID INT NOT NULL,
  INDEX_FIELD_ID INT NOT NULL,
  FIELD_TYPE INT NULL,
  FIELD_VALUE NVARCHAR(255) NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX  IDX_SDID_DOC_ID ON SMARTSHARE_DOC_INDEX_DETAIL (DOC_ID); 
-- DOCUMENT PROFILE INDEX END  

CREATE TABLE SMARTSHARE_DOC_COMMENT (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_ID INT NOT NULL,
  VERSION_ID INT NOT NULL,
  COMMENTER_ID INT NOT NULL,
  COMMENTS NVARCHAR(2000) NULL,
  PARENT_ID INT NOT NULL,
  COMMENT_DATE DATETIME,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE              INDEX IDX_DC_DOC_ID ON SMARTSHARE_DOC_COMMENT (DOC_ID, COMMENTER_ID); 

-- DOCUMENT ES LUCENE INDEX BEGIN 
CREATE TABLE SMARTSHARE_DOC_ESINDEX_CACHE (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_ID INT NOT NULL,
  ACTION_TYPE INT NOT NULL,
  UPDATE_RULES INT NOT NULL,
  UPDATE_ANCESTOR INT NOT NULL,
  EXT NVARCHAR(15) NULL,
  ERROR_NO INT NULL,
  STATUS INT NOT NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

-- DOCUMENT ES LUCENE INDEX  END 

-- DOCUMENT ES DOC VIEW BEGIN 
CREATE TABLE SMARTSHARE_DOC_VIEW_CACHE (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_CONTENT_ID INT NOT NULL,
  PAGE_NUMBER INT NOT NULL,
  STATUS INT NOT NULL,
  PROCESS_MESSAGE NVARCHAR(2048) NULL,
  WATERMARK INT NOT NULL,
  EXT NVARCHAR(15) NULL,
  ERROR_NO INT NULL,
  OBJECT_ID INT NULL,
  PRIORITY INT NULL,
  IS_EXTRACTOR INT,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX IDX_DMS_VIEWER_CACHE ON SMARTSHARE_DOC_VIEW_CACHE (DOC_CONTENT_ID);
CREATE NONCLUSTERED INDEX IDX_DMS_VIEWER_CACHE_STATUS ON SMARTSHARE_DOC_VIEW_CACHE (STATUS);

CREATE TABLE SMARTSHARE_DOC_VIEW_PAGE (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_CONTENT_ID INT NOT NULL,
  PAGE_NUMBER INT NOT NULL,
  THUMBNAIL INT NOT NULL,
  PHYSICAL_ID NVARCHAR(255) NOT NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX IDX_DMS_VIEWER_PAGE ON SMARTSHARE_DOC_VIEW_PAGE (DOC_CONTENT_ID,PAGE_NUMBER,THUMBNAIL);

CREATE TABLE EMAIL_CACHE (
  ID INT IDENTITY(10000,1) NOT NULL,
  EMAIL_ADDRESS NVARCHAR(2000) NULL,
  EMAIL_TYPE NVARCHAR(30) NOT NULL,
  STATUS INT NOT NULL,
  SHORT_URL NVARCHAR(255) NULL,
  START_DATE DATETIME  NULL,
  END_DATE DATETIME  NULL,
  INVITATION_ID INT NULL,
  PRIMARY KEY  (ID)
);


-- TABLE STRUCTURE FOR TABLE DMS_VIEWER_NOTE
-- DOCUMENT ES DOC VIEW END 

-- DOCUMENT AUDIT TRAIL
CREATE TABLE SMARTSHARE_DOC_AUDIT_TRAIL (
  ID INT IDENTITY(10000,1) NOT NULL,
  ROOT_TYPE INT NOT NULL,   --0:PERSONAL , 1: PUBLIC
  OBJECT_TYPE NVARCHAR(30) NOT NULL,
  OBJECT_NAME NVARCHAR(255) NOT NULL DEFAULT '',
  OBJECT_ID INT NOT NULL,
  VERSION_NUMBER NVARCHAR(200) NULL,
  ACCESS_TYPE VARCHAR(3) NOT NULL,
  SESSION_ID NVARCHAR(255),
  IP_ADDRESS NVARCHAR(255) NOT NULL,
  ACCESSOR_ID INT NOT NULL,
  ACCESS_DATE DATETIME NOT NULL,
  COMMENT1 NVARCHAR(1000) NULL,
  COMMENT2 NVARCHAR(1000) NULL,
  COMMENT3 NVARCHAR(1000) NULL,
  COMMENT4 NVARCHAR(1000) NULL,
  COMMENT5 NVARCHAR(1000) NULL,
  PRIMARY KEY  (ID)
);

-- DOCUMENT CHECKOUT_HISTORY 
CREATE TABLE SMARTSHARE_DOC_CHECKOUT_HISTORY (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_ID INT NOT NULL,
  VERSION_ID INT NOT NULL,
  CHECKOUT_TIME DATETIME,
  CHECKIN_TIME DATETIME,
  CHECKOUT_STATUS INT NULL,
  DESCRIPTION NVARCHAR(255) NULL,
  CHECKOUT_PERSON_ID INT,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
-- RECENT DOCUMENT
CREATE TABLE SMARTSHARE_DOC_RECENT(
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_ID INT NOT NULL,
  ACCESSOR_ID INT NOT NULL,
  ACCESS_DATE DATETIME,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX DR_DOC_ID ON  SMARTSHARE_DOC_RECENT (DOC_ID);
CREATE NONCLUSTERED INDEX DR_ACCESSOR_ID ON SMARTSHARE_DOC_RECENT (ACCESSOR_ID,ACCESS_DATE);

-- FAVORITE DOCUMENT
CREATE TABLE SMARTSHARE_DOC_FAVORITE (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_ID INT NOT NULL,
  ACCESSOR_ID INT NOT NULL,  
  ACCESS_DATE DATETIME,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX DF_DOC_ID ON  SMARTSHARE_DOC_FAVORITE (DOC_ID); 
CREATE NONCLUSTERED INDEX DF_ACCESSOR_ID ON SMARTSHARE_DOC_FAVORITE (ACCESSOR_ID,ACCESS_DATE); 

-- DOCUMENT ALERT BEGIN
CREATE TABLE SMARTSHARE_DOC_ALERT (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_ID INT NOT NULL,
  DOC_TYPE INT NOT NULL,
  NOTIFY_TYPE INT NOT NULL,     --0: ALERT ME, 1: TEAM ALERT 
  OBJECT_TYPE INT NOT NULL,     --0: U, 1:G
  OBJECT_ID INT NOT NULL,				-- USERID ,GROUPID
  NOTIFY_WAY INT NULL, --0: EMAIL
  RECORD_STATUS INT NOT  NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE SMARTSHARE_DOC_ALERT_VALUE (
  ID INT IDENTITY(10000,1) NOT NULL,
  NOTIFY_TYPE INT NOT NULL,
  DOC_ID INT NOT NULL,
  ALERT_TYPE  INT NOT NULL,
  ALERTOR NVARCHAR(2000) NOT NULL,
  ACTION_DATE DATETIME NULL,
  STATUS INT NULL,
  RECORD_STATUS INT NOT  NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
-- DOCUMENT ALERT END

--  SYSTEM SET BEGIN
CREATE TABLE SYS_LOGIN_OUT_AUDIT_TRAIL (
	ID INT IDENTITY(10000,1) NOT NULL ,
  USER_RECORD_ID INT NOT NULL,
  LOGIN_DATETIME DATETIME NULL,
  LOGIN_STATUS VARCHAR(2) NOT NULL,
  LOGOUT_DATETIME DATETIME NULL,
  TIMEOUT_FLAG CHAR(1) NULL,
  IP_ADDRESS NVARCHAR(255) NULL,
  SESSION_ID NVARCHAR(255) NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE SYS_FUNCTION (
  ID INT IDENTITY(10000,1) NOT NULL,
  FUNCTION_CODE NVARCHAR(30) NOT NULL,
  FUNCTION_LABEL NVARCHAR(70),
  FUNCTION_ICON NVARCHAR(100),
  PARENT_ID INT NOT NULL,
  LINK_URL NVARCHAR(200) NULL,
  DISPLAY_SEQ INT NOT NULL,
  MENU_TYPE INT NOT NULL,
  PERMISSION_TYPE NVARCHAR(10) NOT NULL,
  STATUS INT NOT NULL,
  PRIMARY KEY  (ID),
  UNIQUE (FUNCTION_CODE)
);

CREATE TABLE  SYS_FUNCTION_RULES_PERMISSION(
  ID INT IDENTITY(10000,1) NOT NULL,
  RULES_ID              INT NOT NULL, 
  FUNCTION_ID           INT NOT NULL,
  PERMISSION            NVARCHAR(100) NOT NULL,  -- FUNCTION OPERATION PERMISSION
  PRIMARY KEY  (ID)
);

CREATE TABLE SYS_PARAMETER (
  ID INT IDENTITY(10000,1) NOT NULL,
  PARAMETER_CODE NVARCHAR(100) NOT NULL,
  PARAMETER_VALUE NVARCHAR(200),
  PARAMETER_DEFAULT_VALUE NVARCHAR(200),
  PARAMETER_TYPE INT NOT NULL,
  DESCRIPTION NVARCHAR(255) NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  STATUS INT NOT NULL,
  PRIMARY KEY  (ID),
  UNIQUE (PARAMETER_CODE)
);

--CREATE TABLE SYS_TABLE_KEY (
--  TABLE_NAME NVARCHAR(255) NOT NULL,
--  TABLE_KEY_MAX INT NOT NULL,
--  PRIMARY KEY  (TABLE_NAME)
--);

CREATE TABLE USER_RECORD (
  ID INT IDENTITY(10000,1) NOT NULL,
  LOGIN_NAME NVARCHAR(200) NOT NULL,
  LOGIN_PWD NVARCHAR(200) NULL,
  MODIFY_LOGIN_PWD INT,
  FIRST_NAME NVARCHAR(100) NOT NULL,
  LAST_NAME NVARCHAR(100) NOT NULL,
  FULL_NAME NVARCHAR(200) NOT NULL,
  COMPANY_ID INT NOT NULL,
  EMAIL NVARCHAR(200) NULL,
  FAILED_ATTEMPT INT NULL,
  MAX_ATTEMPT INT NULL,
  CONNECTOR_FAILED_ATTEMPT INT NULL,
  PWD_EXPIRY_DAY INT NULL,
  LAST_PWD_UPDATE_DATE DATETIME NULL,
  LAST_LOGIN_DATE DATETIME NULL,
  PWD_RESET_FLAG INT DEFAULT '1',
  STATUS INT NOT NULL,
  USER_TYPE INT NULL,
  USER_LINK_ID INT NULL,
  PREFERENCE INT NULL,
  LOCALE NVARCHAR(30) NULL,
  USER_DEF_1 NVARCHAR(200) NULL,
  USER_DEF_2 NVARCHAR(200) NULL,
  USER_DEF_3 NVARCHAR(200) NULL,
  USER_DEF_4 NVARCHAR(200) NULL,
  USER_DEF_5 NVARCHAR(200) NULL,
  TWO_FACTOR_AUTH_ENABLE INT DEFAULT 0,--0:OFF,1:ON
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE USER_GROUP (
  ID INT IDENTITY(10000,1) NOT NULL,
  OWNER_USER_RECORD_ID INT NOT NULL,
  GROUP_TYPE INT NULL,
  GROUP_NAME NVARCHAR(150) NOT NULL,
  GROUP_DESC NVARCHAR(200) NULL,
  PARENT_GROUP_ID INT NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE USER_ROLE (
  ID INT IDENTITY(10000,1) NOT NULL,
  ROLE_TYPE INT NOT NULL,
  ROLE_NAME NVARCHAR(150) NOT NULL,
  ROLE_DESC NVARCHAR(200) NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE MTM_USER_RECORD_USER_GROUP (
  ID INT IDENTITY(10000,1) NOT NULL, 
  USER_RECORD_ID INT NOT NULL,
  USER_GROUP_ID INT NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE MTM_USER_RECORD_USER_ROLE (
  ID INT IDENTITY(10000,1) NOT NULL, 
  USER_RECORD_ID INT NOT NULL,
  USER_ROLE_ID INT NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE USER_RULES( 
  ID INT IDENTITY(10000,1) NOT NULL,
  OBJECT_ID            INT NOT NULL,
  RULES_TYPE           INT NOT NULL, -- 0:USER, 1:GROUP 2ROLE
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE  NONCLUSTERED INDEX  IDX_UR_USER_OR_GROUP_ID   ON  USER_RULES(OBJECT_ID); 
--  SYSTEM SET END


-- MFD Share Begin
CREATE TABLE SMARTSHARE_INVITATION (
  ID INT IDENTITY(10000,1) NOT NULL,
  INVITATION_SUBJECT NVARCHAR(255) NOT NULL,
  INVITATION_MESSAGE NVARCHAR(500) NULL,
  INVITATION_URL NVARCHAR(100) NULL,
  TO_EMAIL NVARCHAR(100) NOT NULL,
  FROM_USER_ID  INT NOT NULL,  
  FROM_USER_NAME NVARCHAR(200) NOT NULL,
  EXPIRY_TYPE  INT NOT NULL,  --0:Y , 1: M, 2:D;
  EXPIRY_DATE   DATETIME  NULL,
  DOWNLOAD INT NOT NULL,  --0:Y , 1: N
  READ_RECEIPT INT NOT NULL, --0:1st Read Only,1:All,2:Off
  WATER_MARK INT NOT NULL,  --0:Y , 1: N
  ITEM_STATUS INT NOT NULL,  --0:Active , 1:Expiry  
  DOCUMENT_ID INT NOT NULL,
  ACCES_NO INT NOT NULL,
  VIEW_NO  INT NOT NULL,
  DOWNLOAD_NO  INT NOT NULL,
  LIMIT_DOWNLOAD_NO  INT NOT NULL,
  
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE SMARTSHARE_MFD_AUDIT_LOG (
  ID INT IDENTITY(10000,1) NOT NULL,
  ACCESS_TYPE INT NOT NULL,  --0:Create , 1: Expire,2: Purge,3: Resume
  ACCESS_IP_ADDRESS NVARCHAR(50) NOT NULL,
  ACCESS_USER_ID INT NOT NULL,
  ACCESS_DATE  DATETIME NOT NULL,
  DOCUMENT_ID INT NOT NULL,
  
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE SMARTSHARE_MFD_INVITATION_AUDIT_LOG (
  ID INT IDENTITY(10000,1) NOT NULL,
  ACTION_INVITATION_ID INT NOT NULL,
  ACTION_SUBJECT NVARCHAR(255) NOT NULL,
  DOCUMENT_ID INT NOT NULL,
  DOCUMENT_NAME NVARCHAR(255) NOT NULL,
  ACTION_TYPE INT NOT NULL,  --0:View , 1: Download
  ACTION_DATE  DATETIME NOT NULL,
  ACTION_IP_ADDRESS NVARCHAR(50) NOT NULL,
  ACTION_USER_ID INT NULL,
  
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
-- MFD Share End

-- smart button begin
CREATE TABLE SMARTSHARE_SMARTBUTTON(
	ID INT IDENTITY(10000,1) NOT NULL,
	SMARTBUTTON_NAME NVARCHAR(255) NOT NULL,
	ICON_PROVIDER INT NOT NULL, -- 0:system, 1:user
	ICON_PATH NVARCHAR(255) NULL,
	ACTOR_TYPE INT NULL,               -- 0:everyone, 1:my team, 2:just me, 3:cutom
	PARENT_ID INT NULL,
	ROOT_ID INT NULL,
	SUB_FOLDER_TYPE INT NULL,        -- 0:no, 1:year, 2:month, 3:date
	OWNER_ID INT NULL,	
	CREATE_BY INT NULL,
	SUB_FOLDER_VALUE NVARCHAR(255) NOT NULL,
	AUTO_RENAME INT NULL,   --0: Yes, 1:No
	MFD_SHOW INT NULL,      --0: Show, 1:Not Show
	RECORD_STATUS INT NOT NULL,
	UPDATE_COUNT INT NOT NULL,
	CREATOR_ID INT NOT NULL,
	CREATE_DATE DATETIME NOT NULL,
	UPDATER_ID INT NOT NULL,
	UPDATE_DATE DATETIME NOT NULL,
	PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX INX_SB_OWNER_ID ON  SMARTSHARE_SMARTBUTTON (OWNER_ID);

CREATE TABLE SMARTBUTTON_RULES_PERMISSION(
	ID INT IDENTITY(10000,1) NOT NULL,
	SMARTBUTTON_ID INT NOT NULL,
	RULES_ID INT NOT NULL,
	PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX INX_SBRP_RULES_ID ON  SMARTBUTTON_RULES_PERMISSION (RULES_ID);
CREATE NONCLUSTERED INDEX INX_SBRP_SMARTBUTTON_ID ON  SMARTBUTTON_RULES_PERMISSION (SMARTBUTTON_ID);

CREATE TABLE SMARTBUTTON_USER_ACTOR(
	ID INT IDENTITY(10000,1) NOT NULL,
	SMARTBUTTON_ID INT NOT NULL,
	USER_ID INT NOT NULL,
	CHOOSE_DATE DATETIME NULL,
	PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX INX_SBUA_USER_ID ON  SMARTBUTTON_USER_ACTOR (USER_ID);
CREATE NONCLUSTERED INDEX INX_SBUA_SMARTBUTTON_ID ON  SMARTBUTTON_USER_ACTOR (SMARTBUTTON_ID);

CREATE TABLE SMARTBUTTON_TAG(
	ID INT IDENTITY(10000,1) NOT NULL,
	SMARTBUTTON_ID INT NOT NULL,
	TAG_ID INT NOT NULL,
	USER_ID INT NOT NULL,
	PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX INX_SBT_TAG_ID ON  SMARTBUTTON_TAG (TAG_ID);
CREATE NONCLUSTERED INDEX INX_SBT_USER_ID ON  SMARTBUTTON_TAG (USER_ID);
CREATE NONCLUSTERED INDEX INX_SBT_SMARTBUTTON_ID ON  SMARTBUTTON_TAG (SMARTBUTTON_ID);

CREATE TABLE SMARTBUTTON_PROFILE_INDEX (
  ID INT IDENTITY(10000,1) NOT NULL,
  SMARTBUTTON_ID INT NOT NULL,
  INDEX_NAME NVARCHAR(255) NULL,
  MANDATORY_FLAG INT NULL,-- 0: MANDATORY, 1: NOT MANDATORY
  VALUE_SUGGEST INT NULL,
  FIELD_TYPE INT NULL,
  DISPLAY_SEQ INT NOT NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX INX_SBPI_SMARTBUTTON_ID ON  SMARTBUTTON_PROFILE_INDEX (SMARTBUTTON_ID);

CREATE TABLE SMARTBUTTON_AUTO_RENAME (
  ID INT IDENTITY(10000,1) NOT NULL,
  SMARTBUTTON_ID INT NOT NULL,
  STEP_NO INT NOT NULL,
	RENAME_TYPE INT NOT NULL,
	RENAME_VALUE NVARCHAR(255) NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX INX_SBAR_SMARTBUTTON_ID ON  SMARTBUTTON_AUTO_RENAME (SMARTBUTTON_ID);
-- smart button end


-- init for first time
CREATE TABLE INIT_MTM_COMPANY_STEP (
  ID INT IDENTITY(10000,1) NOT NULL,
  STEP_ID INT NOT NULL,
  IS_CURRENT INT NOT NULL,
  RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,  
  UNIQUE(STEP_ID),
  PRIMARY KEY  (ID)
);

CREATE TABLE INIT_USER_RECORD (
  ID INT IDENTITY(10000,1) NOT NULL,
  EMAIL_ADDRESS NVARCHAR(200) NOT NULL,
  FIRST_NAME NVARCHAR(100) NOT NULL,
  LAST_NAME NVARCHAR(100) NOT NULL,
  FULL_NAME NVARCHAR(200) NOT NULL,
  RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,  
  UNIQUE(EMAIL_ADDRESS),
  PRIMARY KEY  (ID)
);

CREATE TABLE INIT_DOC_TEMPLATE (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_GROUP_ID INT NOT NULL,
  DOC_NAME NVARCHAR(255) NOT NULL,
  DOC_TYPE INT NOT NULL, -- 0: FOLD, 1: DOCUMENT
  PARENT_ID INT NOT NULL,
  SETUP_ROOT_DOC_ID INT NOT NULL,
  RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,  
  UNIQUE(DOC_GROUP_ID, PARENT_ID, DOC_NAME),
  PRIMARY KEY  (ID)
);

CREATE TABLE INIT_DOC_RULES_PERMISSION (
  ID INT IDENTITY(10000,1) NOT NULL,
  INIT_RULES_ID             INT NOT NULL, 
  INIT_SETUP_DOC_PEM_ID           INT NOT NULL,
  PERMISSION_TYPE      INT NOT NULL,
  READ_PERMISSION      INT NOT NULL, -- 0: READ, 1:DENY READ
  PERMISSION           NVARCHAR(200) NULL, -- OPERATION PERMISSION
  CUSTOM_PERMISSION    NVARCHAR(200) NULL,
  PRIMARY KEY  (ID)
); 
CREATE NONCLUSTERED INDEX IDX_IDRP_IRI_ISDPI ON INIT_DOC_RULES_PERMISSION(INIT_SETUP_DOC_PEM_ID, INIT_RULES_ID);


CREATE TABLE INIT_USER_RULES( 
  ID INT IDENTITY(10000,1) NOT NULL,
  OBJECT_ID            INT NOT NULL,
  RULES_TYPE           INT NOT NULL, -- 0:USER, 1:GROUP 2ROLE
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE OAUTH_TOKEN (
  ID INT IDENTITY(10000,1) NOT NULL,
	COMPANY_ID INT NOT NULL,
	STORAGE_TYPE INT NOT NULL,
	ACCESS_TOKEN NVARCHAR(255) NOT NULL,
	AUTHENTICATION_TOKEN NVARCHAR(255) NULL,
	EXPIRES_IN DATETIME NULL,
	REFRESH_TOKEN NVARCHAR(255) NULL,
	SCOPE NVARCHAR(255) NULL,
	TOKEN_TYPE NVARCHAR(50) NULL,
	SEGMENT_NO INT NULL,
	FILE_COUNT INT NULL,
	RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
); 
CREATE NONCLUSTERED INDEX INX_TOKEN_COMPANY_ID ON  OAUTH_TOKEN (COMPANY_ID);

CREATE TABLE TWO_FACTOR_REGISTER (
  ID INT IDENTITY(10000,1) NOT NULL,
  USER_ID INT NULL,
  COUNTRY_CODE INT NOT NULL,   
  MOBILE_NO NVARCHAR(100) NOT NULL,
  OTP NVARCHAR(20) NULL,
  EXPIRE_DATE DATETIME NULL,
  RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,  
  PRIMARY KEY  (ID)
);

CREATE TABLE SMS_SEND_LOG (
  ID INT IDENTITY(10000,1) NOT NULL,  
  MOBILE_NO NVARCHAR(100) NOT NULL,
  RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,  
  PRIMARY KEY  (ID)
);

CREATE TABLE SYS_SUPPORT (
	ID INT IDENTITY(10000,1) NOT NULL,
	COMPANY_ID INT NOT NULL,
  ISSUE_FROM NVARCHAR(200) NOT NULL,
  PRODUCT_CATEGORY INT NOT NULL,
  ISSUE_SUMMARY NVARCHAR(255) NOT NULL,
  ISSUE_DETAILS NVARCHAR(2000) NOT NULL,
  ISSUE_ATTACHMENT_ID NVARCHAR(255) NULL,
  ISSUE_ATTACHMENT_NAME NVARCHAR(255) NULL,
  ISSUE_RANDOM_NUMBER NVARCHAR(6) NOT NULL,
  RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,  
  PRIMARY KEY  (ID)
);

CREATE TABLE SYS_COUNTRY_CODE(
	ID INT IDENTITY(10000,1) NOT NULL,
	COUNTRY_NAME NVARCHAR(200), 
	COUNTRY_CODE NVARCHAR(6),
	RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
	UPDATE_COUNT INT NOT NULL,
	CREATOR_ID INT NOT NULL,
	CREATE_DATE DATETIME NOT NULL,
	UPDATER_ID INT NOT NULL,
	UPDATE_DATE DATETIME NOT NULL,  
	PRIMARY KEY  (ID)
);

-- SmartButton AUDIT TRAIL
CREATE TABLE SMARTSHARE_SMARTBUTTON_AUDIT_TRAIL (
  ID INT IDENTITY(10000,1) NOT NULL,
  SMARTBUTTON_NAME NVARCHAR(255) NOT NULL DEFAULT '',
  SMARTBUTTON_ID INT NOT NULL,
  SMARTBUTTON_ACCESS_TYPE INT NOT NULL,
  ACCESSOR_ID INT NOT NULL,
  ACCESS_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

-- smartshare share
CREATE TABLE SMARTSHARE_SHARE (
  ID INT IDENTITY(10000,1) NOT NULL,
  SHARE_SUBJECT NVARCHAR(255) NOT NULL,
  SHARE_MESSAGE NVARCHAR(500) NULL,
  SHARE_URL NVARCHAR(100) NULL,
  REQUIRE_SIGNINT INT NOT NULL,  --0:Y , 1: N 
  SHARE_TYPE INT NOT NULL,   --0:Direct Link , 1: SmartShare, 2:SmartShare for MS Outlook, 4:Social Media;
  SHARE_DOCUMENT_TYPE INT NOT NULL, --0:Single  Documents,1:Multiple Documents;
  TO_EMAIL NVARCHAR(100)  NULL,
  FROM_USER_ID  INT NOT NULL,  
  PASSWORD_PROTECTION INT NOT NULL,  --0:Y , 1: N 
  PASSCODE NVARCHAR(200)  NOT NULL,  
  EXPIRY_TYPE  INT NOT NULL,  --0:One Day,1: One Week,2:One Month,3:Three Months,4:Six Months,5:One Year,6:Three Years,7:Never Expires,8:Others;
  EXPIRY_DATE  DATETIME  NULL,
  DOWNLOAD INT NOT NULL,  --0:Y , 1: N
  LIMIT_DOWNLOAD  INT NULL, --0.limit,1.no limit,
  LIMIT_DOWNLOAD_NO  INT NULL, 
  READ_RECEIPT INT NOT NULL, --0:1st Read Only,1:All,2:Off
  WATER_MARK INT NOT NULL,  --0:Y , 1: N
  SHARE_STATUS INT NOT NULL,  --0:Active , 1:Pause ,2:Expiry  
  SHARE_ACCESS_COUNT INT NULL,  
  
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX INX_SMARTSHARE_SHARE_EXPIRY_DATE ON  SMARTSHARE_SHARE (EXPIRY_DATE);

CREATE TABLE SMARTSHARE_SHARE_DOCUMENT (
  ID INT IDENTITY(10000,1) NOT NULL,
  SHARE_ID INT NOT NULL,
  DOCUMENT_ID INT NOT NULL,  
  DOCUMENT_VERSION_ID INT NOT NULL,  
  DOCUMENT_NAME NVARCHAR(255) NOT NULL,---???
  LOCATION NVARCHAR(1000) NULL,
  DOCUMENT_ACCESS_COUNT INT NULL,
  DOCUMENT_VIEW_COUNT INT NULL,
  DOCUMENT_DOWNLOAD_COUNT INT NULL,  
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX INX_SMARTSHARE_SHARE_DOCUMENT_ID ON  SMARTSHARE_SHARE_DOCUMENT (SHARE_ID,DOCUMENT_ID);

CREATE TABLE SMARTSHARE_SHARE_AUDIT_LOG (
  ID INT IDENTITY(10000,1) NOT NULL,
  SHARE_ID INT NOT NULL,
  SHARE_DOCUMENT_ID INT NOT NULL, 
  DOCUMENT_NAME NVARCHAR(255) NOT NULL,
  ACTION_TYPE INT NOT NULL,  --0:View , 1: Download
  ACTION_DATE  DATETIME NOT NULL,
  ACTION_IP_ADDRESS NVARCHAR(50) NOT NULL,
  ACTION_USER_ID INT NULL,  
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE NONCLUSTERED INDEX INX_SMARTSHARE_SHARE_AUDIT_LOG_ID ON  SMARTSHARE_SHARE_AUDIT_LOG (SHARE_ID,SHARE_DOCUMENT_ID);

CREATE TABLE SMARTSHARE_SHARE_PASSCODE (
  ID INT IDENTITY(10000,1) NOT NULL,
  SHARE_ID INT NOT NULL,    
  IP_ADDRESS NVARCHAR(50) NOT NULL,--???
  MAC_ADDRESS NVARCHAR(50) NOT NULL,
  PASSCODE_ERROR_COUNT INT  NULL,    
  PASSCODE_LOCK_DATE  DATETIME NOT NULL,  --Lock Date < Current Time,Can input PassCode
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE SMARTSHARE_SHARE_EMAIL_ADRESS (
  ID INT IDENTITY(10000,1) NOT NULL,
  USER_ID INT NOT NULL,
  EMAIL_ADRESS NVARCHAR(100) NOT NULL,    
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX INX_SMARTSHARE_SHARE_EMAIL_ADRESS_USER_ID ON  SMARTSHARE_SHARE_EMAIL_ADRESS (USER_ID);

CREATE TABLE SMARTSHARE_SHARE_AUDIT_TRAIL (
  ID INT IDENTITY(10000,1) NOT NULL,
  SHARE_ID INT NOT NULL,
  SHARE_DOCUMENT_ID INT NULL, 
  DOCUMENT_NAME NVARCHAR(255) NOT NULL,
  ACCESS_TYPE INT NOT NULL,
  ACCESS_IP_ADDRESS NVARCHAR(50) NOT NULL,
  ACCESS_USER_ID INT NOT NULL,
  ACCESS_DATE  DATETIME NOT NULL,
  
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);

-- ----------------------------
-- Table structure for SYS_MESSAGE_NOTIFICATION
-- ----------------------------
CREATE TABLE SYS_MESSAGE_NOTIFICATION (
	ID INT IDENTITY(10000,1) NOT NULL,
	NOTIFY_ACTOR_ID INT NULL ,
	NOTIFY_ACTOR_TYPE INT NULL, --0:User,1:Group
	NOTIFY_TYPE INT NULL, --2:Comment @,3:Share...
	NOTIFY_DATE DATETIME NULL ,
	SUBJECT NVARCHAR(3000) NULL ,
	DESCRIPTION NVARCHAR(1000) NULL ,
	STATUS INT  NULL,   -- 13:Not Read , 12:Read
	OBJECT_ID INT  NULL,
	OBJECT_TYPE INT  NULL,-- 0:Document, 1:Task, 2:User...
	DUE_DATE DATETIME NULL,
	RECORD_STATUS INT NOT NULL,
	UPDATE_COUNT INT NOT NULL,
	CREATOR_ID INT NOT NULL,
	CREATE_DATE DATETIME NOT NULL,
	UPDATER_ID INT NOT NULL,
	UPDATE_DATE DATETIME NOT NULL,
	PRIMARY KEY  (ID)
);

CREATE NONCLUSTERED INDEX IDX_SYS_MESSAGE_NOTIFICATION_NOTIFY_TYPE  ON SYS_MESSAGE_NOTIFICATION (NOTIFY_TYPE) ;
CREATE NONCLUSTERED INDEX IDX_SYS_MESSAGE_NOTIFICATION__NOTIFY_DATE ON SYS_MESSAGE_NOTIFICATION (NOTIFY_DATE) ;

-- for annotation begin
CREATE TABLE SMARTSHARE_ANNOTATION (
  ID INT IDENTITY(10000,1) NOT NULL,
  PAGE_INDEX INT NOT NULL,
  PAGE_WIDTH INT NOT NULL,
  PAGE_HEIGHT INT NOT NULL,
  ANNOTATION_TYPE_ID INT NOT NULL,
  COORDINATE NVARCHAR(500) NOT NULL,
  FORM_FIELD_NAME NVARCHAR(30) COLLATE Chinese_PRC_CS_AS DEFAULT NULL,
  FORM_FIELD_VALUE NVARCHAR(50) COLLATE Chinese_PRC_CS_AS DEFAULT NULL,
  TEXT NTEXT COLLATE Chinese_PRC_CS_AS NOT NULL,
  FONT_SIZE INT NOT NULL,
  FONT NVARCHAR(50) NOT NULL,
  COLOR NVARCHAR(10) NOT NULL,
  BACKGROUND_COLOR NVARCHAR(10) NOT NULL,
  ICON NTEXT,
  DOC_ID INT NOT NULL,
  CONTENT_ID INT NOT NULL,
  READ_ONLY INT NOT NULL DEFAULT '0',
  READ_ONLY_COMMENT INT NOT NULL DEFAULT '0',
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  MEASUREMENT_TYPE_ID INT NOT NULL DEFAULT '0',
  PRIMARY KEY (ID)
);
CREATE INDEX ANNOTATION_TYPE_ID ON SMARTSHARE_ANNOTATION(ANNOTATION_TYPE_ID);

CREATE TABLE SMARTSHARE_ANNOTATION_COMMENT (
  ID INT IDENTITY(10000,1) NOT NULL,
  ANNOTATION_ID INT NOT NULL,
  COMMENT NTEXT COLLATE Chinese_PRC_CS_AS DEFAULT NULL,
  PARENT_ID INT NOT NULL,
  USERNAME NVARCHAR(100) COLLATE Chinese_PRC_CS_AS DEFAULT NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY (ID)
);
CREATE INDEX ANNOTATION_ID ON SMARTSHARE_ANNOTATION_COMMENT(ANNOTATION_ID);

CREATE TABLE SMARTSHARE_ANNOTATION_COMMENT_REVIEW_HISTORY (
  ID INT IDENTITY(10000,1) NOT NULL,
  COMMENT_ID INT NOT NULL,
  STATUS NVARCHAR(50) COLLATE Chinese_PRC_CS_AS DEFAULT NULL,
  REVIEWED_BY NVARCHAR(100) COLLATE Chinese_PRC_CS_AS DEFAULT NULL,
  DATE_REVIEWED DATETIME NOT NULL,
  PRIMARY KEY (ID)
);
CREATE INDEX COMMENT_ID ON SMARTSHARE_ANNOTATION_COMMENT_REVIEW_HISTORY(COMMENT_ID);

CREATE TABLE SMARTSHARE_ANNOTATION_DRAWING_POSITION (
  ID INT IDENTITY(10000,1) NOT NULL,
  ANNOTATION_ID INT NOT NULL,
  COORDINATE NVARCHAR(500) NOT NULL,
  PRIMARY KEY (ID)
);
CREATE INDEX ANNOTATION_ID ON SMARTSHARE_ANNOTATION_DRAWING_POSITION(ANNOTATION_ID);

CREATE TABLE SMARTSHARE_ANNOTATION_HIGHLIGHT_NTEXT_RECT (
  ID INT IDENTITY(10000,1) NOT NULL,
  ANNOTATION_ID INT NOT NULL,
  COORDINATE NVARCHAR(500) NOT NULL,
  DOM_ROTATE_ANGLE INT NOT NULL,
  PRIMARY KEY (ID)
);
CREATE INDEX ANNOTATION_ID ON SMARTSHARE_ANNOTATION_HIGHLIGHT_NTEXT_RECT(ANNOTATION_ID);

CREATE TABLE SMARTSHARE_ANNOTATION_DIGITAL_SIGNATURE (
  ID INT IDENTITY(10000,1) NOT NULL,
  USER_ID INT NOT NULL,
  SIGNATURE NTEXT NOT NULL,
  WIDTH INT NOT NULL,
  HEIGHT INT NOT NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY (ID)
);
CREATE INDEX DIGITAL_SIGNATURE_USER_ID ON SMARTSHARE_ANNOTATION_DIGITAL_SIGNATURE(USER_ID);
-- for annotation end

CREATE TABLE TEMP_ELASTICSEARCH_NOT_EXIST (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_ID INT NOT NULL,
  PRIMARY KEY  (ID)
);

CREATE TABLE SMARTSHARE_DOC_VIRUS (
  ID INT IDENTITY(10000,1) NOT NULL,
  DOC_ID INT NOT NULL,
  DOC_CONTENT_ID INT NOT NULL,
  STATUS INT NOT NULL,
  PROCESS_MESSAGE NVARCHAR(2048) NULL,
  ERROR_NO INT NULL,
  RECORD_STATUS INT NOT NULL,
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
);
CREATE NONCLUSTERED INDEX IDX_DOC_VIRUS_CONTENT_ID ON SMARTSHARE_DOC_VIRUS (DOC_CONTENT_ID);
CREATE NONCLUSTERED INDEX IDX_DOC_VIRUS_STATUS ON SMARTSHARE_DOC_VIRUS (STATUS);

CREATE TABLE MOBILE_TOKEN (
  ID INT IDENTITY(10000,1) NOT NULL,
	USER_ID INT NOT NULL,
	ACCESS_TOKEN NVARCHAR(255) NOT NULL,
	EXPIRES_IN DECIMAL NULL,
	TOKEN_TYPE NVARCHAR(50) NULL,
	REFRESH_TOKEN NVARCHAR(255) NULL,	
	RECORD_STATUS INT NOT NULL, -- 0: ACTIVE,1: INACTIVE 
  UPDATE_COUNT INT NOT NULL,
  CREATOR_ID INT NOT NULL,
  CREATE_DATE DATETIME NOT NULL,
  UPDATER_ID INT NOT NULL,
  UPDATE_DATE DATETIME NOT NULL,
  PRIMARY KEY  (ID)
); 
CREATE NONCLUSTERED INDEX INX_MOBILE_TOKEN_ID ON  MOBILE_TOKEN (ID);